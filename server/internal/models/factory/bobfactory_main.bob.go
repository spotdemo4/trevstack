// Code generated by BobGen sqlite (devel). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package factory

type Factory struct {
	baseFileMods FileModSlice
	baseItemMods ItemModSlice
	baseUserMods UserModSlice
}

func New() *Factory {
	return &Factory{}
}

func (f *Factory) NewFile(mods ...FileMod) *FileTemplate {
	o := &FileTemplate{f: f}

	if f != nil {
		f.baseFileMods.Apply(o)
	}

	FileModSlice(mods).Apply(o)

	return o
}

func (f *Factory) NewItem(mods ...ItemMod) *ItemTemplate {
	o := &ItemTemplate{f: f}

	if f != nil {
		f.baseItemMods.Apply(o)
	}

	ItemModSlice(mods).Apply(o)

	return o
}

func (f *Factory) NewUser(mods ...UserMod) *UserTemplate {
	o := &UserTemplate{f: f}

	if f != nil {
		f.baseUserMods.Apply(o)
	}

	UserModSlice(mods).Apply(o)

	return o
}

func (f *Factory) ClearBaseFileMods() {
	f.baseFileMods = nil
}

func (f *Factory) AddBaseFileMod(mods ...FileMod) {
	f.baseFileMods = append(f.baseFileMods, mods...)
}

func (f *Factory) ClearBaseItemMods() {
	f.baseItemMods = nil
}

func (f *Factory) AddBaseItemMod(mods ...ItemMod) {
	f.baseItemMods = append(f.baseItemMods, mods...)
}

func (f *Factory) ClearBaseUserMods() {
	f.baseUserMods = nil
}

func (f *Factory) AddBaseUserMod(mods ...UserMod) {
	f.baseUserMods = append(f.baseUserMods, mods...)
}
